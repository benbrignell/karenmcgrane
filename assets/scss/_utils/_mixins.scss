// ----
// Media Queries
// ----

// http://css-tricks.com/conditional-media-query-mixins/

$MQs: true;

@mixin bp($point) {
  @if ($MQs) {
    // These screen sized map to the screen variables in _varibles.scss
    $bp-xs: "(min-width: #{$screen-xs})";
    $bp-sm: "(min-width: #{$screen-sm})";
    $bp-md: "(min-width: #{$screen-md})";
    $bp-lg: "(min-width: #{$screen-lg})";
    $bp-xl: "(min-width: #{$screen-xl})";

    @if $point == xs {
      @media #{$bp-xs} { @content; }
    }
    @else if $point == sm or $point == nav {
      @media #{$bp-sm} { @content; }
    }
    @else if $point == md {
      @media #{$bp-md} { @content; }
    }
    @else if $point == nav {
      @media #{$bp-md} { @content; }
    }
    @else if $point == lg {
      @media #{$bp-lg} { @content; }
    }
    @else if $point == xl {
      @media #{$bp-xl} { @content; }
    }
  }
}



// ----
// Visual Design
// ----

// Button
@mixin button( $button-color, $text-color: $white ) {
	background: $button-color;
	font-weight: 700;
	border-radius: 2px;

	// TODO: BAD BAD
	// Remove important
	// Or is this better than a new style to override the <a> color?
	color: $text-color !important;

	@extend %btn;

	&:hover,
	&:focus {
		background: darken( $button-color, 10% );
		color: $text-color;
	}

	&:active {
		background: darken( $button-color, 40% );
	}
}




// ----
// Typography
// ----

@mixin upperspace() {
    text-transform: uppercase;
    letter-spacing: 1px;
}

@mixin meta($color: $color-text-med, $margin: true) {
    color: $color;
    font-size: $size-sml;

    @if $margin == false {
        margin: 0;
    }
}




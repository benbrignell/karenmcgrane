/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.special {
  color: #21A99C; }

.meta {
  color: #C0C0C0;
  font-size: 1.125rem;
  line-height: 1.3; }

.meta-light {
  line-height: 1.3;
  color: #FFFEF9;
  font-size: 1.125rem; }

.meta-dark {
  line-height: 1.3;
  color: #303030;
  font-size: 1.125rem; }

.text-center {
  text-align: center; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.edit-link {
  font-size: 1.125rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 900;
  color: white; }

.visually-hidden {
  position: absolute;
  top: -9999999px;
  left: -999999px; }

.contain {
  width: 90%;
  margin: 0 auto; }
  @media (min-width: 43em) {
    .contain {
      max-width: 50em;
      padding-left: 5%;
      padding-right: 5%; } }

.contain-sm {
  width: 90%;
  margin: 0 auto; }
  @media (min-width: 43em) {
    .contain-sm {
      max-width: 50em;
      padding-left: 10%;
      padding-right: 10%; } }

.contain-md {
  width: 90%;
  margin: 0 auto; }
  @media (min-width: 43em) {
    .contain-md {
      max-width: 50em;
      padding-left: 5%;
      padding-right: 5%; } }

.contain-lg {
  width: 90%;
  margin: 0 auto; }
  @media (min-width: 43em) {
    .contain-lg {
      max-width: 50em; } }

.contain-lg {
  width: 90%;
  margin: 0 auto; }
  @media (min-width: 43em) {
    .contain-lg {
      max-width: 60em; } }

.grid {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
  margin-left: -1.25rem;
  margin-right: -1.25rem; }
  .grid > * {
    padding-left: 1.25rem;
    padding-right: 1.25rem; }

.cell-sixth {
  -webkit-flex: 0 0 16.66667%;
      -ms-flex: 0 0 16.66667%;
          flex: 0 0 16.66667%;
  max-width: 16.66667%; }

.cell-fourth {
  -webkit-flex: 0 0 25%;
      -ms-flex: 0 0 25%;
          flex: 0 0 25%;
  max-width: 25%; }

.cell-third {
  -webkit-flex: 0 0 33.33333%;
      -ms-flex: 0 0 33.33333%;
          flex: 0 0 33.33333%;
  max-width: 33.33333%; }

.cell-half {
  -webkit-flex: 0 0 50%;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  max-width: 50%; }

.cell-full {
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  max-width: 100%; }

.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }

@-webkit-keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px); }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0); } }

@keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
            transform: translateY(-20px); }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0); } }

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown; }

* {
  box-sizing: border-box; }

body {
  word-wrap: break-word; }

img {
  max-width: 100%; }

.site-header {
  background-color: #F7DE32; }

.site-title {
  margin-top: 0;
  padding-top: 2.03125rem;
  font-size: 2.03125rem; }

.site-desc {
  font-size: 2.03125rem;
  font-weight: 900;
  line-height: 1.3;
  padding-bottom: 3.20375rem; }
  @media (min-width: 36em) {
    .site-desc {
      font-size: 3.20375rem; } }

.archive-title {
  font-size: 1.25rem;
  font-weight: 500; }

html {
  font-size: 80%;
  line-height: 1.5;
  font-weight: 500; }

body {
  font-family: "Avenir W01", serif;
  font-size: 1.25rem;
  color: #303030; }
  .wf-loading body {
    font-family: "Helvetica", sans-serif; }
    .wf-loading body h1, .wf-loading body h2, .wf-loading body h3, .wf-loading body h4, .wf-loading body h5, .wf-loading body h6 {
      font-family: "Helvetica", sans-serif;
      font-weight: 900; }

a {
  color: #303030;
  text-decoration: none; }
  p a, span a {
    text-decoration: underline; }
  a:hover, a:focus {
    color: #21A99C;
    text-decoration: none; }
  a:active {
    color: black;
    text-decoration: none; }
  a:link {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.3); }

h1, h2, h3, h4, h5, h6 {
  font-family: "Avenir W01", serif;
  font-weight: 900;
  margin-bottom: 0;
  line-height: 1.3; }

h1 {
  font-size: 3.20375rem;
  margin-top: 2.5rem; }

h2 {
  font-size: 3.20375rem; }

h3 {
  font-size: 2.5rem; }

h4 {
  font-size: 2.03125rem; }

h5 {
  font-size: 1.25rem;
  font-family: "Avenir W01", serif; }

h6 {
  font-family: "Avenir W01", serif;
  font-size: 1.19588rem;
  text-transform: uppercase;
  letter-spacing: 1px; }

small {
  font-size: 1.125rem; }

strong {
  font-weight: 900; }

blockquote {
  font-size: 2.03125rem;
  font-style: italic;
  margin-left: 2.5rem; }
  blockquote:before {
    background-image: url(../img/svg-min/quotes-left.min.svg);
    background-repeat: no-repeat;
    opacity: 0.7;
    content: " ";
    width: 2.5rem;
    height: 2.5rem;
    position: absolute;
    left: 0; }

p {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem; }

.lead {
  font-size: 2.03125rem; }

*:focus {
  outline: 0; }

label {
  margin-top: 2.03125rem;
  margin-bottom: 0.75rem;
  font-family: "Avenir W01", serif; }

input[type="search"] {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none; }

textarea {
  overflow: auto;
  vertical-align: top; }

textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"] {
  width: 100%;
  border: 1px dotted #f3f3f3; }
  textarea:focus,
  input[type="text"]:focus,
  input[type="password"]:focus,
  input[type="datetime"]:focus,
  input[type="datetime-local"]:focus,
  input[type="date"]:focus,
  input[type="month"]:focus,
  input[type="time"]:focus,
  input[type="week"]:focus,
  input[type="number"]:focus,
  input[type="email"]:focus,
  input[type="url"]:focus,
  input[type="search"]:focus,
  input[type="tel"]:focus {
    border-color: #3C7996;
    background-color: #fff6c6; }

input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-right: 0.75rem;
  margin-top: 1px \9;
  *margin-top: 0;
  line-height: normal;
  cursor: pointer; }

select,
input[type="file"] {
  *margin-top: 4px;
  /* In IE7, the height of the select element cannot be changed by height, only font-size */ }

select:focus,
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: 1px dotted #f3f3f3;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px; }

fieldset {
  border: 0; }

.btn {
  display: inline-block;
  padding: 0.75rem;
  margin-top: 1.125rem;
  margin-bottom: 1.125rem; }
  .btn .icon {
    fill: #FFFEF9; }
  .btn--danger {
    background-color: white;
    color: #FFFEF9; }
    .btn--danger:hover {
      background-color: #9999ff;
      color: #FFFEF9; }
    .btn--danger:active {
      background-color: blue;
      color: #ffed93; }
  .btn--warning {
    background-color: #F7DE32;
    color: #FFFEF9; }
    .btn--warning:hover {
      background-color: #bca507;
      color: #FFFEF9; }
    .btn--warning:active {
      background-color: #282302;
      color: #ffed93; }
  .btn--success {
    background-color: #1BBF54;
    color: #FFFEF9; }
    .btn--success:hover {
      background-color: #0e662d;
      color: #FFFEF9; }
    .btn--success:active {
      background-color: black;
      color: #ffed93; }
  .btn--cta {
    background-color: #303030;
    color: #FFFEF9; }
    .btn--cta:hover {
      background-color: black;
      color: #FFFEF9; }
    .btn--cta:active {
      background-color: black;
      color: #ffed93; }

.link--edit a {
  color: #F7DE32;
  font-style: italic; }

.alert {
  padding: 1.25rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .alert-danger {
    background-color: white;
    color: #FFFEF9; }
  .alert-warning {
    background-color: #fdf6c5;
    color: #FFFEF9; }
  .alert-success {
    background-color: #85eeaa;
    color: #FFFEF9; }
  .alert-cta {
    background-color: #7d7d7d;
    color: #FFFEF9; }

.alert-img {
  -webkit-flex: 1 0;
      -ms-flex: 1 0;
          flex: 1 0; }

.alert-cta .icon {
  fill: #FFFEF9; }

.alert-content {
  -webkit-flex: 2 0;
      -ms-flex: 2 0;
          flex: 2 0; }

.alert-title {
  margin-top: 1.25rem; }

table {
  width: 100%;
  font-family: "Avenir W01", serif;
  margin-bottom: 1.5em; }
  table caption {
    margin: 0 0 7px;
    font-size: 0.75rem;
    color: #FFFEF9; }

tr:nth-child(even) {
  background-color: #fff6c6; }

td {
  padding: 7px;
  border-right: 1px solid #F7DE32; }
  td:last-child {
    border-right: 0; }

th {
  background-color: #F7DE32;
  border-bottom: 1px solid #F7DE32;
  border-right: 1px solid #F7DE32; }
  th:last-child {
    border-right: 0; }

.icon {
  width: 1.25rem;
  height: 1.25rem;
  display: inline-block; }

.shape {
  width: 100%; }

.header.-site {
  text-align: center; }

.header.-single {
  margin-bottom: 1.25rem; }

.header-tagline {
  margin-bottom: 2.5rem; }

.site-nav-list {
  list-style-type: none;
  padding-left: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

.site-nav-list-item {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  margin-right: 2.03125rem; }
  @media (min-width: 36em) {
    .site-nav-list-item {
      -webkit-justify-content: flex-start;
          -ms-flex-pack: start;
              justify-content: flex-start; } }

.nav-prev,
.nav-next {
  -webkit-flex: 1 0;
      -ms-flex: 1 0;
          flex: 1 0; }

.nav-prev {
  text-align: right; }

.tease-title {
  font-size: 3.20375rem; }

.tease-meta {
  color: #C0C0C0;
  font-size: 1.125rem; }

.tease-more {
  margin-left: 1.125rem; }

.block-title {
  margin-bottom: 1.25rem; }

.block_list-list {
  list-style-type: none;
  margin: 0;
  padding: 0; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIl91dGlscy9fYWxsLnNjc3MiLCJfdXRpbHMvX25vcm1hbGl6ZS5zY3NzIiwiX3V0aWxzL192YXJpYWJsZXMuc2NzcyIsIl91dGlscy9fbWl4aW5zLnNjc3MiLCJfdXRpbHMvX2hlbHBlcnMuc2NzcyIsIl91dGlscy9fbGF5b3V0LnNjc3MiLCJfdXRpbHMvX2FuaW1hdGlvbnMuc2NzcyIsImJhc2UvX2FsbC5zY3NzIiwiYmFzZS9fc2l0ZS5zY3NzIiwiYmFzZS9fYXJjaGl2ZXMuc2NzcyIsImNvbXBvbmVudHMvX2FsbC5zY3NzIiwiY29tcG9uZW50cy9fdHlwb2dyYXBoeS5zY3NzIiwiY29tcG9uZW50cy9fdGl0bGVzLnNjc3MiLCJjb21wb25lbnRzL19mb3Jtcy5zY3NzIiwiY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiY29tcG9uZW50cy9fbGlua3Muc2NzcyIsImNvbXBvbmVudHMvX2FsZXJ0cy5zY3NzIiwiY29tcG9uZW50cy9fdGFibGVzLnNjc3MiLCJjb21wb25lbnRzL19pY29ucy5zY3NzIiwiY29tcG9uZW50cy9fc3Bpbm5lci5zY3NzIiwiaGVhZGVycy9fYWxsLnNjc3MiLCJuYXZzL19hbGwuc2NzcyIsIm5hdnMvX25hdi1zaXRlLnNjc3MiLCJuYXZzL19uYXYtc2VjdGlvbi5zY3NzIiwibmF2cy9fbmF2LWZvb3Rlci5zY3NzIiwibmF2cy9fbmF2LXByZXZuZXh0LnNjc3MiLCJ0ZWFzZXMvX2FsbC5zY3NzIiwidGVhc2VzL190ZWFzZS1wb3N0LnNjc3MiLCJibG9ja3MvX2FsbC5zY3NzIiwiYmxvY2tzL19ibG9jay1pbnRyby5zY3NzIiwiYmxvY2tzL19ibG9jay1saXN0LnNjc3MiLCJibG9ja3MvX2Jsb2NrLXRleHQuc2NzcyIsImJsb2Nrcy9fYmxvY2stdGV4dGltYWdlLnNjc3MiLCJibG9ja3MvX2Jsb2NrLWN0YS5zY3NzIiwiYmxvY2tzL19ibG9jay1yZWxhdGVkLnNjc3MiLCJibG9ja3MvX2Jsb2NrLXRlc3RpbW9uaWFsLnNjc3MiLCJfaG9sZGluZy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5AaW1wb3J0ICdfdXRpbHMvYWxsJzsgLy8gTWl4aW5zLCB2YXJpYWJsZXMsIGFuZCB0b29scyB0aGF0IGRvIG5vdCBvdXRwdXQgY29kZVxuLy8gQGltcG9ydCAnX2dsb2JhbC9hbGwnOyAvLyBHbG9iYWwgc2VsZWN0b3JzXG5cbkBpbXBvcnQgJ2Jhc2UvYWxsJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvYWxsJztcbkBpbXBvcnQgJ2hlYWRlcnMvYWxsJztcbkBpbXBvcnQgJ25hdnMvYWxsJztcbkBpbXBvcnQgJ3RlYXNlcy9hbGwnO1xuQGltcG9ydCAnYmxvY2tzL2FsbCc7XG5cbi8vIEBpbXBvcnQgJ3V0aWxpdHknOyAvLyBGb3IgcHJvdG90eXBpbmcgYW5kIHNob3VsZCBub3QgYmUgdXNlZCBpbiBwcm9kdWN0aW9uXG5AaW1wb3J0ICdob2xkaW5nJzsgLy8gU3R5bGVzIHRoYXQgbmVlZCB0byBiZSByZW1vdmVkIGFuZCBoYW5kbGVkIGRpZmZlcmVudGx5XG4iLCJcbi8vIFJlc2V0XG5AaW1wb3J0ICdub3JtYWxpemUnO1xuXG4vLyBWYXJpYWJsZXNcbkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5cbi8vIER5bmFtaWNcbkBpbXBvcnQgJ21peGlucyc7XG5AaW1wb3J0ICdoZWxwZXJzJztcblxuQGltcG9ydCAnbGF5b3V0JztcblxuQGltcG9ydCAnYW5pbWF0aW9ucyc7XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemUgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMSBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn0iLCJcbi8vIC0tLS1cbi8vIC0tLS0gU2NyZWVuIHNpemVzXG4vLyAtLS0tXG5cbiRzY3JlZW4teHM6ICAgICAzMGVtO1xuJHNjcmVlbi1zbTogICAgIDM2ZW07XG4kc2NyZWVuLW1kOiAgICAgNDNlbTtcbiRzY3JlZW4tbGc6ICAgXHQ1MGVtO1xuJHNjcmVlbi14bDogICAgIDYwZW07XG5cblxuXG4vLyAtLS0tXG4vLyAtLS0tIENvbG9yc1xuLy8gLS0tLVxuXG4vLyBOb3QgaW4gdXNlXG4kd2hpdGU6IFx0XHRcdCNGMkYyRjI7XG4kYmx1ZTogXHRcdFx0XHQjM0M3OTk2O1xuJHJlZDogXHRcdFx0XHQjQUYzMjM2O1xuJGwtdGVhbDogXHRcdFx0I0JERjJFMztcbiRncmVlbjogXHRcdFx0IzFCQkY1NDtcbiRsLWdyZWVuOiBcdFx0I0Q5RjJBMjtcblxuJHRlYWw6ICAgICAgICAjMjFBOTlDO1xuJHllbGxvdzogXHRcdFx0I0Y3REUzMjtcbiRjcmVhbTogICAgICAgI0ZGRkVGOTtcblxuJGdyZXk6ICAgICAgICAjQzBDMEMwO1xuJGRhcmstZ3JleTogXHQjMzAzMDMwO1xuXG5cbi8vIFNlbWFudGljIHZhcmlhYmxlIG5hbWVzXG5cbi8vIENvbG9yIFNjaGVtZVxuJGNvbG9yLWFjY2VudC12bGlnaHQ6XHRkYXJrZW4oJGNyZWFtLCAxMCUpO1xuJGNvbG9yLWFjY2VudC1saWdodDpcdCR5ZWxsb3c7XG4kY29sb3ItYWNjZW50LW1lZDpcdFx0JHRlYWw7XG4kY29sb3ItYWNjZW50LWRhcms6XHRcdCRkYXJrLWdyZXk7XG5cbi8vIEFsZXJ0c1xuJGNvbG9yLWFsZXJ0LWRhbmdlcjogXHQgIGxpZ2h0ZW4oJGwtZ3JlZW4sIDQwJSk7XG4kY29sb3ItYWxlcnQtd2FybmluZzogXHQkeWVsbG93O1xuJGNvbG9yLWFsZXJ0LWluZm86IFx0XHQgICRibHVlO1xuJGNvbG9yLWFsZXJ0LXN1Y2Nlc3M6IFx0JGdyZWVuO1xuXG4vLyBUZXh0IGNvbG9yc1xuJGNvbG9yLXRleHQtZGFyazogXHRcdCRkYXJrLWdyZXk7XG4kY29sb3ItdGV4dC1tZWQ6IFx0XHQgICRncmV5O1xuJGNvbG9yLXRleHQtbWVkbGlnaHQ6IGxpZ2h0ZW4oJGNvbG9yLXRleHQtbWVkLCAyMCUpO1xuJGNvbG9yLXRleHQtbGlnaHQ6IFx0XHQkY3JlYW07XG5cbi8vIExpbmtzXG4kY29sb3ItbGluazpcdFx0XHQgICAgJGRhcmstZ3JleTtcbiRjb2xvci1saW5rLWhvdmVyOiBcdFx0JHRlYWw7XG4kY29sb3ItbGluay1hY3RpdmU6IFx0ZGFya2VuKCRjb2xvci1saW5rLWhvdmVyLCA0MCUpO1xuXG4vLyBCb2R5XG4kY29sb3ItYm9keS1ia2dkOiBcdFx0JGNyZWFtO1xuJGNvbG9yLWJvZHktdGV4dDogXHRcdCRjb2xvci10ZXh0LWRhcms7XG5cbi8vIENhbGxzIHRvIGFjdGlvbiAtIFRPRE86IHRvbyBtdWNoP1xuJGNvbG9yLWN0YS1ia2dkOiBcdCRjb2xvci1hY2NlbnQtZGFyaztcbiRjb2xvci1jdGEtdGV4dDogXHQkY29sb3ItdGV4dC1saWdodDtcbiRjb2xvci1jdGEtbGluazogXHQkY29sb3ItdGV4dC1saWdodDtcblxuJGNvbG9yLXRhYmxlLXJvdGF0ZTogXHRsaWdodGVuKCRjb2xvci1hbGVydC1pbmZvLCA1MCUpO1xuXG5cblxuLy8gLS0tLVxuLy8gLS0tLSBTaXplIFNjYWxlXG4vLyAtLS0tXG5cbi8vIFJlbSBVbml0IFNjYWxlXG5cbiRzaXplLWNvbnRhaW4tbGc6IFx0MTEwJTtcbiRzaXplLWNvbnRhaW4tbWQ6IFx0MTAyJTtcbiRzaXplLWNvbnRhaW4tc206IFx0OTglO1xuJHNpemUtY29udGFpbi1iYXNlOiA4MCU7XG5cbiRzaXplLXA6ICAgICAgICAgICAgMS4yNXJlbTtcblxuJHNpemUteHNtbDogICAgICAgICAkc2l6ZS1wKjAuNjtcbiRzaXplLXNtbDogICAgICAgICAgJHNpemUtcCowLjk7XG4kc2l6ZS14bDogICAgICAgICAgICRzaXplLXAqMy43NTtcblxuJHNpemUtaDE6ICAgICAgICAgICAkc2l6ZS1wKjMuMjU7XG4kc2l6ZS1oMjogICAgICAgICAgICRzaXplLXAqMi41NjM7XG4kc2l6ZS1oMzogICAgICAgICAgICRzaXplLXAqMjtcbiRzaXplLWg0OiAgICAgICAgICAgJHNpemUtcCoxLjYyNTtcbiRzaXplLWg1OiAgICAgICAgICAgJHNpemUtcCoxO1xuJHNpemUtaDY6ICAgICAgICAgICAkc2l6ZS1zbWwqMS4wNjM7XG5cblxuXG4vLyAtLS0tXG4vLyAtLS0tIFR5cG9ncmFwaHlcbi8vIC0tLS1cblxuJHNlcmlmOlx0XHRcdFx0ICAnR2VvcmdpYScsIHNlcmlmO1xuJHNhbnMtc2VyaWY6XHRcdCdBdmVuaXIgVzAxJywgc2VyaWY7XG5cbiRsaW5lLWhlaWdodC1iYXNlOiBcdDEuNTtcbiRsaW5lLWhlaWdodC1zbTogXHQgIDEuMztcblxuJGZvbnQtc2Fucy1mYWxsYmFjazpcdCdIZWx2ZXRpY2EnLCBzYW5zLXNlcmlmO1xuJGZvbnQtc2VyaWYtZmFsbGJhY2s6ICdHZW9yZ2lhJywgc2VyaWY7XG5cbiRmb250LWhlYWRpbmc6IFx0JHNhbnMtc2VyaWY7XG4kZm9udC1ib2R5OiBcdFx0JHNhbnMtc2VyaWY7XG4kZm9udC1uYXY6IFx0XHRcdCRzYW5zLXNlcmlmO1xuJGZvbnQtZm9ybTogXHRcdCRzYW5zLXNlcmlmO1xuJGZvbnQtbGVhZDogXHRcdCRzYW5zLXNlcmlmO1xuXG4kZm9udC13ZWlnaHQtaGVhZGluZzogOTAwO1xuJGZvbnQtd2VpZ2h0LWJhc2U6IFx0XHQ1MDA7XG4kZm9udC13ZWlnaHQtc3Ryb25nOiBcdDkwMDtcblxuXG5cblxuLy8gLS0tLVxuLy8gLS0tLSBVdGlsaXRpZXNcbi8vIC0tLS1cblxuJGJvcmRlci1hY2NlbnQ6IFx0MXB4IGRvdHRlZCAkY29sb3ItdGV4dC1tZWRsaWdodDtcblxuLy8gWi1JbmRleCBTY2FsZVxuJHotYmFzZTogXHRcdFx0MTtcbiR6LWJhY2s6IFx0XHRcdCR6LWJhc2UrMTtcbiR6LW1pZDogXHRcdFx0JHotYmFzZSsyO1xuJHotdG9wOiBcdFx0XHQkei1iYXNlKzM7XG5cbiIsIi8vIC0tLS1cbi8vIE1lZGlhIFF1ZXJpZXNcbi8vIC0tLS1cblxuLy8gaHR0cDovL2Nzcy10cmlja3MuY29tL2NvbmRpdGlvbmFsLW1lZGlhLXF1ZXJ5LW1peGlucy9cblxuJE1RczogdHJ1ZTtcblxuQG1peGluIGJwKCRwb2ludCkge1xuICBAaWYgKCRNUXMpIHtcbiAgICAvLyBUaGVzZSBzY3JlZW4gc2l6ZWQgbWFwIHRvIHRoZSBzY3JlZW4gdmFyaWFibGVzIGluIF92YXJpYmxlcy5zY3NzXG4gICAgJGJwLXhzOiBcIihtaW4td2lkdGg6ICN7JHNjcmVlbi14c30pXCI7XG4gICAgJGJwLXNtOiBcIihtaW4td2lkdGg6ICN7JHNjcmVlbi1zbX0pXCI7XG4gICAgJGJwLW1kOiBcIihtaW4td2lkdGg6ICN7JHNjcmVlbi1tZH0pXCI7XG4gICAgJGJwLWxnOiBcIihtaW4td2lkdGg6ICN7JHNjcmVlbi1sZ30pXCI7XG4gICAgJGJwLXhsOiBcIihtaW4td2lkdGg6ICN7JHNjcmVlbi14bH0pXCI7XG5cbiAgICBAaWYgJHBvaW50ID09IHhzIHtcbiAgICAgIEBtZWRpYSAjeyRicC14c30geyBAY29udGVudDsgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkcG9pbnQgPT0gc20gb3IgJHBvaW50ID09IG5hdiB7XG4gICAgICBAbWVkaWEgI3skYnAtc219IHsgQGNvbnRlbnQ7IH1cbiAgICB9XG4gICAgQGVsc2UgaWYgJHBvaW50ID09IG1kIHtcbiAgICAgIEBtZWRpYSAjeyRicC1tZH0geyBAY29udGVudDsgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkcG9pbnQgPT0gbmF2IHtcbiAgICAgIEBtZWRpYSAjeyRicC1tZH0geyBAY29udGVudDsgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAkcG9pbnQgPT0gbGcge1xuICAgICAgQG1lZGlhICN7JGJwLWxnfSB7IEBjb250ZW50OyB9XG4gICAgfVxuICAgIEBlbHNlIGlmICRwb2ludCA9PSB4bCB7XG4gICAgICBAbWVkaWEgI3skYnAteGx9IHsgQGNvbnRlbnQ7IH1cbiAgICB9XG4gIH1cbn1cblxuXG5cbi8vIC0tLS1cbi8vIFZpc3VhbCBEZXNpZ25cbi8vIC0tLS1cblxuLy8gQnV0dG9uXG5AbWl4aW4gYnV0dG9uKCAkYnV0dG9uLWNvbG9yLCAkdGV4dC1jb2xvcjogJHdoaXRlICkge1xuXHRiYWNrZ3JvdW5kOiAkYnV0dG9uLWNvbG9yO1xuXHRmb250LXdlaWdodDogNzAwO1xuXHRib3JkZXItcmFkaXVzOiAycHg7XG5cblx0Ly8gVE9ETzogQkFEIEJBRFxuXHQvLyBSZW1vdmUgaW1wb3J0YW50XG5cdC8vIE9yIGlzIHRoaXMgYmV0dGVyIHRoYW4gYSBuZXcgc3R5bGUgdG8gb3ZlcnJpZGUgdGhlIDxhPiBjb2xvcj9cblx0Y29sb3I6ICR0ZXh0LWNvbG9yICFpbXBvcnRhbnQ7XG5cblx0QGV4dGVuZCAlYnRuO1xuXG5cdCY6aG92ZXIsXG5cdCY6Zm9jdXMge1xuXHRcdGJhY2tncm91bmQ6IGRhcmtlbiggJGJ1dHRvbi1jb2xvciwgMTAlICk7XG5cdFx0Y29sb3I6ICR0ZXh0LWNvbG9yO1xuXHR9XG5cblx0JjphY3RpdmUge1xuXHRcdGJhY2tncm91bmQ6IGRhcmtlbiggJGJ1dHRvbi1jb2xvciwgNDAlICk7XG5cdH1cbn1cblxuXG5cblxuLy8gLS0tLVxuLy8gVHlwb2dyYXBoeVxuLy8gLS0tLVxuXG5AbWl4aW4gdXBwZXJzcGFjZSgpIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG5cbkBtaXhpbiBtZXRhKCRjb2xvcjogJGNvbG9yLXRleHQtbWVkLCAkbWFyZ2luOiB0cnVlKSB7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgICBmb250LXNpemU6ICRzaXplLXNtbDtcblxuICAgIEBpZiAkbWFyZ2luID09IGZhbHNlIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbn1cblxuXG5cbiIsIlxuXG4vLyAtLS0tXG4vLyBUeXBvZ3JhcGh5XG4vLyAtLS0tXG5cbi5zcGVjaWFsIHtcblx0Y29sb3I6ICRjb2xvci1hY2NlbnQtbWVkO1xufVxuXG4ubWV0YSB7XG5cdEBpbmNsdWRlIG1ldGEoKTtcblx0bGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1zbTtcbn1cblxuXHQubWV0YS1saWdodCB7XG5cdFx0bGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1zbTtcblx0XHRAaW5jbHVkZSBtZXRhKCRjb2xvci10ZXh0LWxpZ2h0KTtcblx0fVxuXG5cdC5tZXRhLWRhcmsge1xuXHRcdGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtc207XG5cdFx0QGluY2x1ZGUgbWV0YSgkY29sb3ItYm9keS10ZXh0KTtcblx0fVxuXG4udGV4dC1jZW50ZXIge1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi50ZXh0LWxlZnQge1xuXHR0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4udGV4dC1yaWdodCB7XG5cdHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5cblxuLy8gLS0tLVxuLy8gRWxlbWVudHNcbi8vIC0tLS1cblxuLmVkaXQtbGluayB7XG5cdGZvbnQtc2l6ZTogJHNpemUtc21sO1xuXHRAaW5jbHVkZSB1cHBlcnNwYWNlKCk7XG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc3Ryb25nO1xuXHRjb2xvcjogJGNvbG9yLWFsZXJ0LWRhbmdlcjtcbn1cblxuXG5cblxuXG5cbi8vIC0tLS1cbi8vIFV0aWxpdHlcbi8vIC0tLS1cblxuLnZpc3VhbGx5LWhpZGRlbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTk5OTk5OTlweDtcbiAgICBsZWZ0OiAtOTk5OTk5cHg7XG59XG5cblxuXG4iLCJcbi8vIC0tLS1cbi8vIExheW91dFxuLy8gLS0tLVxuXG4vLyBDb250YWluZXJzXG5cbiRjLXBhZDogMTAlO1xuXG5AbWl4aW4gY29udGFpbigkc2l6ZTogbWQpIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgQGluY2x1ZGUgYnAobWQpIHtcbiAgICBAaWYgJHNpemUgIT0geGwge1xuICAgICAgbWF4LXdpZHRoOiAkc2NyZWVuLWxnO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBtYXgtd2lkdGg6ICRzY3JlZW4teGw7XG4gICAgfVxuXG4gICAgQGlmICRzaXplID09IHNtIHtcbiAgICAgIHBhZGRpbmctbGVmdDogJGMtcGFkO1xuICAgICAgcGFkZGluZy1yaWdodDogJGMtcGFkO1xuICAgIH1cbiAgICBAZWxzZWlmICRzaXplID09IG1kIHtcbiAgICAgIHBhZGRpbmctbGVmdDogJGMtcGFkLzI7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAkYy1wYWQvMjtcbiAgICB9XG4gIH1cbn1cblxuLmNvbnRhaW4ge1xuICBAaW5jbHVkZSBjb250YWluKCk7XG59XG5cbi5jb250YWluLXNtIHtcbiAgQGluY2x1ZGUgY29udGFpbihzbSk7XG59XG5cbi5jb250YWluLW1kIHtcbiAgQGluY2x1ZGUgY29udGFpbihtZCk7XG59XG5cbi5jb250YWluLWxnIHtcbiAgQGluY2x1ZGUgY29udGFpbihsZyk7XG59XG5cbi5jb250YWluLWxnIHtcbiAgQGluY2x1ZGUgY29udGFpbih4bCk7XG59XG5cblxuXG5cbi8vIEZsZXhib3ggTGF5b3V0XG5cbiRzaXplczogKFxuICBmdWxsOiAgIDEwMCUsXG4gIGhhbGY6ICAgNTAlLFxuICB0aGlyZDogIDMzLjMzMzMzMyUsXG4gIGZvdXJ0aDogMjUlLFxuICBmaWZ0aDogIDIwJSxcbiAgc2l4dGg6ICAxNi42NjY2NjY2NyVcbik7XG5cbiRndXR0ZXI6ICRzaXplLXA7XG5cbkBtaXhpbiBjZWxsKCRzaXplOiBmYWxzZSkge1xuICBAaWYgJHNpemUgIT0gZmFsc2Uge1xuICAgIGZsZXg6IDAgMCBtYXAtZ2V0KCRzaXplcywgJHNpemUpO1xuICAgIG1heC13aWR0aDogbWFwLWdldCgkc2l6ZXMsICRzaXplKTsgLy8gRml4IGZvciBGaXJlZm94XG4gIH1cbn1cblxuQG1peGluIGdyaWQoJGd1dHRlcmVkOiB0cnVlLCAkd3JhcDogbm93cmFwKSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogJHdyYXA7XG5cbiAgQGlmICRndXR0ZXJlZCB7XG4gICAgJiA+ICoge1xuICAgICAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyO1xuICAgICAgcGFkZGluZy1yaWdodDogJGd1dHRlcjtcbiAgICB9XG4gICAgbWFyZ2luLWxlZnQ6IC0kZ3V0dGVyO1xuICAgIG1hcmdpbi1yaWdodDogLSRndXR0ZXI7XG4gIH1cblxufVxuXG4uZ3JpZCB7XG4gIEBpbmNsdWRlIGdyaWQ7XG59XG5cbi5jZWxsLXNpeHRoIHtcbiAgQGluY2x1ZGUgY2VsbChzaXh0aCk7XG59XG5cbi5jZWxsLWZvdXJ0aCB7XG4gIEBpbmNsdWRlIGNlbGwoZm91cnRoKTtcbn1cblxuLmNlbGwtdGhpcmQge1xuICBAaW5jbHVkZSBjZWxsKHRoaXJkKTtcbn1cblxuLmNlbGwtaGFsZiB7XG4gIEBpbmNsdWRlIGNlbGwoaGFsZik7XG59XG5cbi5jZWxsLWZ1bGwge1xuICBAaW5jbHVkZSBjZWxsKGZ1bGwpO1xufVxuXG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCIgXCI7IC8vIDFcbiAgICAgICAgZGlzcGxheTogdGFibGU7IC8vIDJcbiAgICB9XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn1cblxuIiwiLmFuaW1hdGVkIHsgXG4gICAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDFzOyBcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDFzOyBcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7IFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7IFxufSBcblxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVJbkRvd24geyBcbiAgICAwJSB7IFxuICAgICAgICBvcGFjaXR5OiAwOyBcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOyBcbiAgICB9IFxuICAgIDEwMCUgeyBcbiAgICAgICAgb3BhY2l0eTogMTsgXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyBcbiAgICB9IFxufSBcblxuQGtleWZyYW1lcyBmYWRlSW5Eb3duIHsgXG4gICAgMCUgeyBcbiAgICAgICAgb3BhY2l0eTogMDsgXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7IFxuICAgIH0gXG4gICAgMTAwJSB7IFxuICAgICAgICBvcGFjaXR5OiAxOyBcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyBcbiAgICB9IFxufSBcblxuLmZhZGVJbkRvd24geyBcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duOyBcbiAgICBhbmltYXRpb24tbmFtZTogZmFkZUluRG93bjsgXG59IiwiXG4vLy0tLS1cbi8vLS0tLSBCYXNlIFN0eWxlc1xuLy8tLS0tXG5cbkBpbXBvcnQgJ3NpdGUnO1xuQGltcG9ydCAnYXJjaGl2ZXMnO1xuIiwiXG4vLyAtLS0tXG4vLyBCYXNlIHN0eWxlc1xuLy8gLS0tLVxuXG4qIHtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG5cdHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuXHRAaW5jbHVkZSBicChzbWFsbCkge1xuXHRcdHdvcmQtd3JhcDogbm9ybWFsO1xuXHR9XG59XG5cbmltZyB7XG5cdG1heC13aWR0aDogMTAwJTtcbn1cblxuLnNpdGUtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWFjY2VudC1saWdodDtcbn1cblxuLnNpdGUtdGl0bGUge1xuICBtYXJnaW4tdG9wOiAwO1xuICBwYWRkaW5nLXRvcDogJHNpemUtaDQ7XG4gIGZvbnQtc2l6ZTogJHNpemUtaDQ7XG59XG5cbi5zaXRlLWRlc2Mge1xuICBmb250LXNpemU6ICRzaXplLWg0O1xuICBAaW5jbHVkZSBicChuYXYpIHtcbiAgICBmb250LXNpemU6ICRzaXplLWgyO1xuICB9XG5cbiAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1zdHJvbmc7XG4gIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtc207XG4gIHBhZGRpbmctYm90dG9tOiAkc2l6ZS1oMjtcbn1cbiIsIi5hcmNoaXZlLXRpdGxlIHtcbiAgZm9udC1zaXplOiAkc2l6ZS1oNTtcbiAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1iYXNlO1xufVxuIiwiXG4vLy0tLS1cbi8vLS0tLSBFbGVtZW50c1xuLy8tLS0tXG5cblxuLy8gUm9vdCBlbGVtZW50cyBzdHlsZXNcblxuQGltcG9ydCAndHlwb2dyYXBoeSc7XG5AaW1wb3J0ICd0aXRsZXMnO1xuQGltcG9ydCAnZm9ybXMnO1xuQGltcG9ydCAnYnV0dG9ucyc7XG5AaW1wb3J0ICdsaW5rcyc7XG5AaW1wb3J0ICdhbGVydHMnO1xuQGltcG9ydCAndGFibGVzJztcbkBpbXBvcnQgJ2ljb25zJztcbkBpbXBvcnQgJ3NwaW5uZXInO1xuIiwiXG4vLy8gQGdyb3VwIFR5cG9ncmFwaHlcblxuaHRtbCB7XG5cdGZvbnQtc2l6ZTogJHNpemUtY29udGFpbi1iYXNlO1xuXHRsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWJhc2U7XG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtYmFzZTtcblxuXHRAaW5jbHVkZSBicChzbWFsbCkge1xuXHRcdGZvbnQtc2l6ZTogJHNpemUtY29udGFpbi1zbTtcblx0fVxuXG5cdEBpbmNsdWRlIGJwKHNtYWxsKSB7XG5cdFx0Zm9udC1zaXplOiAkc2l6ZS1jb250YWluLW1kO1xuXHR9XG5cblx0QGluY2x1ZGUgYnAoc21hbGwpIHtcblx0XHRmb250LXNpemU6ICRzaXplLWNvbnRhaW4tbGc7XG5cdH1cbn1cblxuYm9keSB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1ib2R5O1xuXHRmb250LXNpemU6ICRzaXplLXA7XG5cdGNvbG9yOiAkY29sb3ItYm9keS10ZXh0O1xuXG5cdC53Zi1sb2FkaW5nICYge1xuXHRcdGZvbnQtZmFtaWx5OiAkZm9udC1zYW5zLWZhbGxiYWNrO1xuXG5cdFx0aDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG5cdFx0XHRmb250LWZhbWlseTogJGZvbnQtc2Fucy1mYWxsYmFjaztcblx0XHRcdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtaGVhZGluZztcblx0XHR9XG5cdH1cbn1cblxuYSB7XG5cdGNvbG9yOiAkY29sb3ItbGluaztcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG5cdHAgJiwgc3BhbiAmIHtcblx0XHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcblx0fVxuXG5cdCY6aG92ZXIsICY6Zm9jdXMge1xuXHRcdGNvbG9yOiAkY29sb3ItbGluay1ob3Zlcjtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cblxuXHQmOmFjdGl2ZSB7XG5cdFx0Y29sb3I6ICRjb2xvci1saW5rLWFjdGl2ZTtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cblxuXHQvLyBtb2JpbGUgdGFwIGNvbG9yXG5cdCY6bGluayB7XG5cdFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIDogcmdiYSggMCwgMCwgMCwgMC4zICk7XG5cdH1cbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1oZWFkaW5nO1xuXHRmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWhlYWRpbmc7XG5cdG1hcmdpbi1ib3R0b206IDA7XG5cdGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtc207XG59XG5cbmgxIHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oMjtcblx0bWFyZ2luLXRvcDogJHNpemUtaDM7XG59XG5cbmgyIHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oMjtcblx0Ly8gbWFyZ2luLXRvcDogJHNpemUtaDM7XG59XG5cbmgzIHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oMztcblx0Ly8gbWFyZ2luLXRvcDogJHNpemUtaDM7XG59XG5cbmg0IHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oNDtcblx0Ly8gbWFyZ2luLXRvcDogJHNpemUtaDQ7XG59XG5cbmg1IHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oNTtcblx0Zm9udC1mYW1pbHk6ICRmb250LWJvZHk7XG59XG5cbmg2IHtcblx0Zm9udC1mYW1pbHk6ICRmb250LWJvZHk7XG5cdGZvbnQtc2l6ZTogJHNpemUtaDY7XG5cdEBpbmNsdWRlIHVwcGVyc3BhY2UoKTtcblx0Ly8gbWFyZ2luLXRvcDogJHNpemUtcDtcbn1cblxuc21hbGwge1xuXHRmb250LXNpemU6ICRzaXplLXNtbDtcbn1cblxuc3Ryb25nIHtcblx0Ly8gVE9ETzogQWRkIHJlYWwgZm9udCBoZXJlIGluc3RlYWQgb2YgZmF1eCBib2xkXG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc3Ryb25nO1xufVxuXG5ibG9ja3F1b3RlIHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oNDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xuXHRtYXJnaW4tbGVmdDogJHNpemUtaDM7XG5cblx0JjpiZWZvcmUge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ZnLW1pbi9xdW90ZXMtbGVmdC5taW4uc3ZnKTtcblx0XHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuXHRcdG9wYWNpdHk6IDAuNztcblxuXHRcdGNvbnRlbnQ6IFwiIFwiO1xuXG5cdFx0d2lkdGg6ICRzaXplLWgzO1xuXHRcdGhlaWdodDogJHNpemUtaDM7XG5cblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0bGVmdDogMDtcblx0fVxufVxuXG5wIHtcblx0bWFyZ2luLXRvcDogJHNpemUteHNtbDtcblx0bWFyZ2luLWJvdHRvbTogJHNpemUteHNtbDtcbn1cblxuXG4vLy8gQGdyb3VwIHR5cG9ncmFwaHktaGVscGVyc1xuLy8vIEBkZXNjcmlwdGlvbiBbU2VtYW50aWMgY2xhc3NlcyBmb3IgdHlwb2dyYXBoeS4gVGhlc2UgbWF5IGJlIGV4dGVuZGVkIGluIHRoZWlyIGFzc29jaWF0ZWQgcGFydGlhbC5dXG5cbi5sZWFkIHtcblx0Zm9udC1zaXplOiAkc2l6ZS1oNDtcbn1cblxuLnN1bW1hcnkge1xuXG59XG4iLCIudGl0bGUtdGVhc2Uge1xuXG59XG5cbi50aXRsZS1zaW5nbGUge1xuXG59XG5cbi50aXRsZS1wYWdlIHtcblxufVxuXG4udGl0bGUtc2VjdGlvbiB7XG5cbn1cblxuLnRpdGxlLXNpdGUge1xuXG59XG5cbi50aXRsZS1zdXBwb3J0IHtcblxufSIsIlxuXG4vLyAtLS0tLVxuLy8gRm9ybSBzdHlsZXNcbi8vIC0tLS0tXG5cbi8vIFJlbW92ZSB0aGUgYmx1ZSBvdXRsaW5lIGZyb20gQ2hyb21lXG4qOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwO1xufVxuXG5sYWJlbCwgc2VsZWN0IHtcblx0Ly8gZGlzcGxheTogYmxvY2s7XG59XG5cbmxhYmVsIHtcblx0bWFyZ2luLXRvcDogJHNpemUtaDQ7XG5cdG1hcmdpbi1ib3R0b206ICRzaXplLXhzbWw7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1mb3JtO1xufVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcblx0LXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcblx0LW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG5cdGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XG5cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxudGV4dGFyZWEge1xuXHRvdmVyZmxvdzogYXV0bztcblx0dmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxudGV4dGFyZWEsXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSxcbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxuaW5wdXRbdHlwZT1cIm1vbnRoXCJdLFxuaW5wdXRbdHlwZT1cInRpbWVcIl0sXG5pbnB1dFt0eXBlPVwid2Vla1wiXSxcbmlucHV0W3R5cGU9XCJudW1iZXJcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwidXJsXCJdLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbmlucHV0W3R5cGU9XCJ0ZWxcIl0ge1xuXHRcblx0d2lkdGg6IDEwMCU7XG5cdGJvcmRlcjogJGJvcmRlci1hY2NlbnQ7XG5cblx0Jjpmb2N1cyB7XG5cdFx0Ym9yZGVyLWNvbG9yOiAkY29sb3ItYWxlcnQtaW5mbztcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYWNjZW50LXZsaWdodDtcblx0fVxufVxuXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0sXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuXHRtYXJnaW46IDRweCAwIDA7XG5cdG1hcmdpbi1yaWdodDogJHNpemUteHNtbDtcblx0bWFyZ2luLXRvcDogMXB4IFxcOTtcblx0Km1hcmdpbi10b3A6IDA7XG5cdGxpbmUtaGVpZ2h0OiBub3JtYWw7XG5cdGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaW5wdXRbdHlwZT1cImZpbGVcIl0sXG5pbnB1dFt0eXBlPVwiaW1hZ2VcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSxcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG59XG5cbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG5idXR0b24ge1xufVxuXG5cbnNlbGVjdCxcbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcblx0Km1hcmdpbi10b3A6IDRweDsgLyogSW4gSUU3LCB0aGUgaGVpZ2h0IG9mIHRoZSBzZWxlY3QgZWxlbWVudCBjYW5ub3QgYmUgY2hhbmdlZCBieSBoZWlnaHQsIG9ubHkgZm9udC1zaXplICovXG59XG5cbnNlbGVjdDpmb2N1cyxcbmlucHV0W3R5cGU9XCJmaWxlXCJdOmZvY3VzLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdOmZvY3VzLFxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmZvY3VzIHtcblx0b3V0bGluZTogJGJvcmRlci1hY2NlbnQ7XG5cdG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjtcblx0b3V0bGluZS1vZmZzZXQ6IC0ycHg7XG59XG5cbmZpZWxkc2V0IHtcblx0Ym9yZGVyOiAwO1xufVxuXG4iLCJcbi8vLyBAZ3JvdXAgYnV0dG9uc1xuLy8vIEBjb250ZW50IFtCdXR0b25zIGZvciBzdHVmZl1cblxuJGJ1dHRvbnM6IChcbiAgICBkYW5nZXI6ICAgICAoJGNvbG9yLWFsZXJ0LWRhbmdlciwgJGNvbG9yLXRleHQtbGlnaHQpLFxuICAgIHdhcm5pbmc6ICAgICgkY29sb3ItYWxlcnQtd2FybmluZywgJGNvbG9yLXRleHQtbGlnaHQpLFxuICAgIHN1Y2Nlc3M6ICAgICgkY29sb3ItYWxlcnQtc3VjY2VzcywgJGNvbG9yLXRleHQtbGlnaHQpLFxuICAgIGN0YTogICAgICAgICgkY29sb3ItY3RhLWJrZ2QsICRjb2xvci1jdGEtdGV4dClcbik7XG4gXG4uYnRuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogJHNpemUteHNtbDtcbiAgICBtYXJnaW4tdG9wOiAkc2l6ZS1zbWw7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNpemUtc21sO1xuXG4gICAgLmljb24ge1xuICAgICAgICBmaWxsOiAkY29sb3ItdGV4dC1saWdodDsgICBcbiAgICB9XG5cbiAgICBAZWFjaCAkbmFtZSwgJGNvbG9ycyBpbiAkYnV0dG9ucyB7XG4gICAgICAgICRiZ2NvbG9yOiBudGgoJGNvbG9ycywgMSk7XG4gICAgICAgICRmb250Y29sb3I6IG50aCgkY29sb3JzLCAyKTtcblxuICAgICAgICAmLS0jeyRuYW1lfSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBOZWVkIHRvIGRlYWwgd2l0aCBob3ZlciBzdHlsZXMuXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmdjb2xvcjtcbiAgICAgICAgICAgIGNvbG9yOiAkZm9udGNvbG9yO1xuXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJGJnY29sb3IsIDIwJSk7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRmb250Y29sb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRiZ2NvbG9yLCA1MCUpO1xuICAgICAgICAgICAgICAgIGNvbG9yOiBkYXJrZW4oJGZvbnRjb2xvciwgMjAlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuIiwiXG4ubGluay0tZWRpdCBhIHtcblx0Y29sb3I6ICRjb2xvci1hbGVydC13YXJuaW5nO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59IiwiXG4vLy8gQGdyb3VwIGFsZXJ0c1xuLy8vIEBjb250ZW50IFtBbGVydHMgdXNlZCBmb3IgY29udGFpbmVycyBhcm91bmQgdGV4dCBhbmQgYnV0dG9ucy5dXG5cbi8vIFVzZWQgZm9yIGJ1dHRvbnMgYW5kIGFsZXJ0c1xuXG4kYWxlcnQtY29sb3JzOiAoXG4gICAgZGFuZ2VyOiAgICAgKCRjb2xvci1hbGVydC1kYW5nZXIsICRjb2xvci10ZXh0LWxpZ2h0KSxcbiAgICB3YXJuaW5nOiAgICAoJGNvbG9yLWFsZXJ0LXdhcm5pbmcsICRjb2xvci10ZXh0LWxpZ2h0KSxcbiAgICBzdWNjZXNzOiAgICAoJGNvbG9yLWFsZXJ0LXN1Y2Nlc3MsICRjb2xvci10ZXh0LWxpZ2h0KSxcbiAgICBjdGE6ICAgICAgICAoJGNvbG9yLWN0YS1ia2dkLCAkY29sb3ItY3RhLXRleHQpXG4pO1xuXG5cbi5hbGVydCB7XG4gICAgcGFkZGluZzogJHNpemUtcDtcbiAgICAvLyBAaW5jbHVkZSBibGVlZDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgQGVhY2ggJG5hbWUsICRjb2xvcnMgaW4gJGFsZXJ0LWNvbG9ycyB7XG4gICAgICAgICRiZ2NvbG9yOiBudGgoJGNvbG9ycywgMSk7XG4gICAgICAgICRmb250Y29sb3I6IG50aCgkY29sb3JzLCAyKTtcblxuICAgICAgICAmLSN7JG5hbWV9IHtcbiAgICAgICAgICAgIC8vIFRPRE86IE5lZWQgdG8gZGVhbCB3aXRoIGhvdmVyIHN0eWxlcy5cbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGJnY29sb3IsIDMwJSk7XG4gICAgICAgICAgICBjb2xvcjogJGZvbnRjb2xvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmFsZXJ0LWltZyB7XG4gICAgZmxleDogMSAwO1xufVxuXG4uYWxlcnQtY3RhIC5pY29uIHtcbiAgICBmaWxsOiAkY29sb3ItdGV4dC1saWdodDtcbn1cblxuLmFsZXJ0LWNvbnRlbnQge1xuICAgIGZsZXg6IDIgMDtcbn1cblxuLmFsZXJ0LXRpdGxlIHtcbiAgICBtYXJnaW4tdG9wOiAkc2l6ZS1wO1xufVxuIiwiXG4vLy8gQGdyb3VwIFRhYmxlc1xuXG50YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZvcm07XG4gICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG5cbiAgICBjYXB0aW9uIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgN3B4O1xuICAgICAgICBmb250LXNpemU6ICRzaXplLXhzbWw7XG4gICAgICAgIGNvbG9yOiAkY29sb3ItdGV4dC1saWdodDtcbiAgICB9XG59XG5cbnRyIHtcbiAgICAmOm50aC1jaGlsZChldmVuKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1hY2NlbnQtdmxpZ2h0O1xuICAgIH1cbn1cblxudGQge1xuICAgIHBhZGRpbmc6IDdweDtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkY29sb3ItYWNjZW50LWxpZ2h0O1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgIH1cbn1cblxudGgge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1hY2NlbnQtbGlnaHQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1hY2NlbnQtbGlnaHQ7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGNvbG9yLWFjY2VudC1saWdodDtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1yaWdodDogMDtcbiAgICB9XG59IiwiJWljb24tYmFzZSB7XG5cdHdpZHRoOiAkc2l6ZS1wO1xuXHRoZWlnaHQ6ICRzaXplLXA7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuQG1peGluIGljb24oJGZpbGwsICRob3ZlcjogJGNvbG9yLWFjY2VudC1tZWQpIHtcblx0QGV4dGVuZCAlaWNvbi1iYXNlO1xufVxuXG4uc2hhcGUge1xuXHR3aWR0aDogMTAwJTtcbn1cblxuLmljb24ge1xuXHRAaW5jbHVkZSBpY29uKCRjb2xvci1hY2NlbnQtZGFyayk7XG59XG4iLCIvLyAvLyBodHRwOi8vdG9iaWFzYWhsaW4uY29tL3NwaW5raXQvXG5cbi8vIC5zcGlubmVyIHtcbi8vICAgZGlzcGxheTogbm9uZTtcbiAgXG4vLyAgIEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4vLyAgICAgZGlzcGxheTogYmxvY2s7XG4vLyAgIH1cblxuLy8gICBtYXJnaW46IDEwMHB4IGF1dG87XG4vLyAgIHdpZHRoOiAyMHB4O1xuLy8gICBoZWlnaHQ6IDIwcHg7XG4vLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vICAgdG9wOiAyNSU7XG4vLyAgIHJpZ2h0OiA1MCU7XG4vLyAgIHJpZ2h0OiBjYWxjKDUwJSAtIDIwcHgpO1xuLy8gICB6LWluZGV4OiAkenRvcDtcbi8vIH1cblxuLy8gLmNvbnRhaW5lcjEgPiBkaXYsIC5jb250YWluZXIyID4gZGl2LCAuY29udGFpbmVyMyA+IGRpdiB7XG4vLyAgIHdpZHRoOiA2cHg7XG4vLyAgIGhlaWdodDogNnB4O1xuLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1saWdodDtcblxuLy8gICBib3JkZXItcmFkaXVzOiAxMDAlO1xuLy8gICBwb3NpdGlvbjogYWJzb2x1dGU7XG4vLyAgIC13ZWJraXQtYW5pbWF0aW9uOiBib3VuY2VkZWxheSAxLjJzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuLy8gICBhbmltYXRpb246IGJvdW5jZWRlbGF5IDEuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4vLyAgIC8qIFByZXZlbnQgZmlyc3QgZnJhbWUgZnJvbSBmbGlja2VyaW5nIHdoZW4gYW5pbWF0aW9uIHN0YXJ0cyAqL1xuLy8gICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4vLyAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4vLyB9XG5cbi8vIC5zcGlubmVyIC5zcGlubmVyLWNvbnRhaW5lciB7XG4vLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vICAgd2lkdGg6IDEwMCU7XG4vLyAgIGhlaWdodDogMTAwJTtcbi8vIH1cblxuLy8gLmNvbnRhaW5lcjIge1xuLy8gICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XG4vLyAgIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XG4vLyB9XG5cbi8vIC5jb250YWluZXIzIHtcbi8vICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVooOTBkZWcpO1xuLy8gICB0cmFuc2Zvcm06IHJvdGF0ZVooOTBkZWcpO1xuLy8gfVxuXG4vLyAuY2lyY2xlMSB7IHRvcDogMDsgbGVmdDogMDsgfVxuLy8gLmNpcmNsZTIgeyB0b3A6IDA7IHJpZ2h0OiAwOyB9XG4vLyAuY2lyY2xlMyB7IHJpZ2h0OiAwOyBib3R0b206IDA7IH1cbi8vIC5jaXJjbGU0IHsgbGVmdDogMDsgYm90dG9tOiAwOyB9XG5cbi8vIC5jb250YWluZXIyIC5jaXJjbGUxIHtcbi8vICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0xLjFzO1xuLy8gICBhbmltYXRpb24tZGVsYXk6IC0xLjFzO1xuLy8gfVxuXG4vLyAuY29udGFpbmVyMyAuY2lyY2xlMSB7XG4vLyAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMS4wcztcbi8vICAgYW5pbWF0aW9uLWRlbGF5OiAtMS4wcztcbi8vIH1cblxuLy8gLmNvbnRhaW5lcjEgLmNpcmNsZTIge1xuLy8gICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuOXM7XG4vLyAgIGFuaW1hdGlvbi1kZWxheTogLTAuOXM7XG4vLyB9XG5cbi8vIC5jb250YWluZXIyIC5jaXJjbGUyIHtcbi8vICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjhzO1xuLy8gICBhbmltYXRpb24tZGVsYXk6IC0wLjhzO1xuLy8gfVxuXG4vLyAuY29udGFpbmVyMyAuY2lyY2xlMiB7XG4vLyAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMC43cztcbi8vICAgYW5pbWF0aW9uLWRlbGF5OiAtMC43cztcbi8vIH1cblxuLy8gLmNvbnRhaW5lcjEgLmNpcmNsZTMge1xuLy8gICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuNnM7XG4vLyAgIGFuaW1hdGlvbi1kZWxheTogLTAuNnM7XG4vLyB9XG5cbi8vIC5jb250YWluZXIyIC5jaXJjbGUzIHtcbi8vICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjVzO1xuLy8gICBhbmltYXRpb24tZGVsYXk6IC0wLjVzO1xuLy8gfVxuXG4vLyAuY29udGFpbmVyMyAuY2lyY2xlMyB7XG4vLyAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMC40cztcbi8vICAgYW5pbWF0aW9uLWRlbGF5OiAtMC40cztcbi8vIH1cblxuLy8gLmNvbnRhaW5lcjEgLmNpcmNsZTQge1xuLy8gICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuM3M7XG4vLyAgIGFuaW1hdGlvbi1kZWxheTogLTAuM3M7XG4vLyB9XG5cbi8vIC5jb250YWluZXIyIC5jaXJjbGU0IHtcbi8vICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjJzO1xuLy8gICBhbmltYXRpb24tZGVsYXk6IC0wLjJzO1xuLy8gfVxuXG4vLyAuY29udGFpbmVyMyAuY2lyY2xlNCB7XG4vLyAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMC4xcztcbi8vICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xcztcbi8vIH1cblxuLy8gQC13ZWJraXQta2V5ZnJhbWVzIGJvdW5jZWRlbGF5IHtcbi8vICAgMCUsIDgwJSwgMTAwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjApIH1cbi8vICAgNDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMCkgfVxuLy8gfVxuXG4vLyBAa2V5ZnJhbWVzIGJvdW5jZWRlbGF5IHtcbi8vICAgMCUsIDgwJSwgMTAwJSB7IFxuLy8gICAgIHRyYW5zZm9ybTogc2NhbGUoMC4wKTtcbi8vICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4wKTtcbi8vICAgfSA0MCUgeyBcbi8vICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMCk7XG4vLyAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMCk7XG4vLyAgIH1cbi8vIH0iLCJcbi5oZWFkZXIge1xuXG4gICYuLXNpdGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gICYuLXBhZ2Uge1xuXG4gIH1cblxuICAmLi1zaW5nbGUge1xuICAgIG1hcmdpbi1ib3R0b206ICRzaXplLXA7XG4gIH1cbn1cblxuLmhlYWRlci10YWdsaW5lIHtcbiAgbWFyZ2luLWJvdHRvbTogJHNpemUtaDM7XG59XG5cbiIsIkBpbXBvcnQgJ25hdi1zaXRlJztcbkBpbXBvcnQgJ25hdi1zZWN0aW9uJztcbkBpbXBvcnQgJ25hdi1mb290ZXInO1xuQGltcG9ydCAnbmF2LXByZXZuZXh0JzsiLCJcbi5zaXRlLW5hdiB7XG5cbn1cblxuLnNpdGUtbmF2LWxpc3Qge1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdHBhZGRpbmctbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uc2l0ZS1uYXYtbGlzdC1pdGVtIHtcbiAgLy8gZmxleC1iYXNpczogNTAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgbWFyZ2luLXJpZ2h0OiAkc2l6ZS1oNDtcbiAgQGluY2x1ZGUgYnAobmF2KSB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC8vIGZsZXgtYmFzaXM6IGF1dG87XG4gIH1cblx0Ly8gbWFyZ2luLWxlZnQ6ICRzaXplLXA7XG5cdC8vIG1hcmdpbi1yaWdodDogJHNpemUtcDtcbn1cblxuIiwiIiwiIiwiXG4ubmF2LXByZXYsXG4ubmF2LW5leHQge1xuXHRmbGV4OiAxIDA7XG59XG5cbi5uYXYtcHJldiB7XG5cdHRleHQtYWxpZ246IHJpZ2h0O1xufSIsIlxuLy8gVE9ETzogbW92ZSB0aGlzIHRvIGNoaWxkIHRoZW1lXG5cbi50ZWFzZS1ibHVyYiB7XG5cbn1cblxuLnRlYXNlLXRpdGxlIHtcbiAgZm9udC1zaXplOiAkc2l6ZS1oMjtcbn1cblxuLnRlYXNlLW1ldGEge1xuXHRAaW5jbHVkZSBtZXRhKCk7XG59XG5cbi50ZWFzZS1tb3JlIHtcbiAgbWFyZ2luLWxlZnQ6ICRzaXplLXNtbDtcbn1cblxuQGltcG9ydCAndGVhc2UtcG9zdCc7XG4iLCIvLyAudGVhc2Uge1xuXG4vLyBcdGJvcmRlci1ib3R0b206ICRib3JkZXItYWNjZW50O1xuLy8gXHRwYWRkaW5nLWJvdHRvbTogJHNpemUtaDQ7XG5cbi8vIFx0JjpsYXN0LWNoaWxkIHtcbi8vIFx0XHRib3JkZXItYm90dG9tOiBub25lO1xuLy8gXHR9XG5cbi8vIFx0Ji4tYXJ0aWNsZSB7XG5cbi8vIFx0fVxuLy8gXHQmLi1wcmVzZW50YXRpb24ge1xuXG4vLyBcdH1cblxuLy8gfVxuXG4vLyAudGVhc2UtbW9yZSB7XG4vLyBcdCYuLWRlZmF1bHQge1xuLy8gXHRcdGZsZXg6IDEgMDtcbi8vIFx0fVxuLy8gfVxuXG4vLyBcdC5tb3JlLWljb24ge1xuLy8gXHRcdGZvbnQtc2l6ZTogJHNpemUtaDQ7XG4vLyBcdFx0cGFkZGluZy1sZWZ0OiAkc2l6ZS1wO1xuLy8gXHR9XG5cbi8vIC50ZWFzZS1tYWluIHtcbi8vIFx0Ji4tZGVmYXVsdCB7XG4vLyBcdFx0ZmxleDogNiAwO1xuLy8gXHR9XG4vLyB9XG4iLCIuYmxvY2stdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAkc2l6ZS1wO1xufVxuXG4vLyBCbG9ja3MhXG5cbkBpbXBvcnQgJ2Jsb2NrLWludHJvJztcbkBpbXBvcnQgJ2Jsb2NrLWxpc3QnO1xuQGltcG9ydCAnYmxvY2stdGV4dCc7XG5AaW1wb3J0ICdibG9jay10ZXh0aW1hZ2UnO1xuQGltcG9ydCAnYmxvY2stY3RhJztcbkBpbXBvcnQgJ2Jsb2NrLXJlbGF0ZWQnO1xuQGltcG9ydCAnYmxvY2stdGVzdGltb25pYWwnO1xuIiwiLy8gLmJsb2NrLWludHJvIHtcbi8vIFx0QGluY2x1ZGUgcm90YXRlO1xuLy8gXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuLy8gfSIsIlxuLmJsb2NrX2xpc3QtbGlzdCB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xufVxuXG5cbi8vLyBAZ3JvdXAgTGlzdCBEaXNwbGF5c1xuXG4ubGlzdC0tbWlub3Ige1xuXG59XG5cbi5saXN0LS1tYWpvciB7XG5cdFxufVxuXG4ubGlzdC0tZnJlZV9mb3JtIHtcblxufVxuXG4ubGlzdC0tY29ubmVjdGVkX2NvbnRlbnQge1xuXG59XG4iLCIiLCJcbi8vIGZpZ3VyZSB7XG4vLyBcdG1hcmdpbjogMDtcbi8vIH1cblxuLy8gLmNhcHRpb24ge31cblxuLy8gXHRpbWcuY2FwdGlvbi1pbWFnZSB7XG4vLyBcdFx0Ym9yZGVyLXRvcDogJGFjY2VudC1ib3JkZXI7XG4vLyBcdH1cblxuLy8gLnRleHRpbWFnZS1pbWFnZSB7XG5cbi8vIFx0QGluY2x1ZGUgYnAoc21hbGwpIHtcbi8vIFx0XHRwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyO1xuLy8gXHR9XG5cbi8vIFx0QGluY2x1ZGUgYnAobWVkKSB7XG4vLyBcdFx0bWFyZ2luLWxlZnQ6IHBlcmNlbnRhZ2UoMS83KSotMTtcbi8vIFx0fVxuXHRcbi8vIFx0QGluY2x1ZGUgYnAobGFyZ2UpIHtcbi8vIFx0XHRtYXJnaW4tbGVmdDogcGVyY2VudGFnZSgyLzcpKi0xO1xuLy8gXHR9XG5cbi8vIFx0cGFkZGluZy1ib3R0b206ICRndXR0ZXIvMjtcbi8vIFx0cG9zaXRpb246IHJlbGF0aXZlO1xuLy8gfVxuXG4vLyAudGV4dGltYWdlLXRleHQge1xuXHRcbi8vIH0iLCIuYmxvY2tfY3RhIHtcblx0Ly8gdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubGVhZC1jdGEge31cbiIsIlxuLy8gLmJsb2NrX3JlbGF0ZWRfcGFnZSB7XG4vLyBcdGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQtdmxpZ2h0O1xuLy8gXHRwYWRkaW5nLWJvdHRvbTogJHNpemUtcDtcbi8vIH1cblxuLy8gLnJlbGF0ZWQtdGl0bGUge1xuLy8gXHRtYXJnaW4tdG9wOiAkc2l6ZS1wO1xuLy8gfVxuXG4vLyAucHJvbXB0LXdyYXAge31cblxuLy8gXHQucHJvbXB0IHtcbi8vIFx0XHRAaW5jbHVkZSB1cHBlcnNwYWNlO1xuLy8gXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vIFx0XHR0b3A6IDA7XG5cbi8vIFx0XHRAaW5jbHVkZSBicChsYXJnZSkge1xuLy8gXHRcdFx0Ly8gdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbi8vIFx0XHRcdC8vIElNUE9SVEFOVDogQ2FuJ3QgbGVhdmUgdGhpcyBsaWtlIHRoaXNcbi8vIFx0XHRcdC8vIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgYm90dG9tO1xuLy8gXHRcdFx0Ly8gcG9zaXRpb246IGFic29sdXRlO1xuLy8gXHRcdFx0Ly8gbGVmdDogLSRzaXplLXA7XG4vLyBcdFx0XHQvLyB0b3A6IDgycHg7XG4vLyBcdFx0fVxuXG4vLyBcdFx0c3BhbiB7XG4vLyBcdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG4vLyBcdFx0XHRwYWRkaW5nOiAkc21sLzIgJHNtbDtcbi8vIFx0XHRcdEBpbmNsdWRlIHJvdGF0ZSgkdGV4dC1saWdodCwgJGFsZXJ0LXN1Y2Nlc3MpO1xuLy8gXHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuLy8gXHRcdFx0ei1pbmRleDogJHptaWQ7XG5cbi8vIFx0XHRcdEBpbmNsdWRlIGJwKGxhcmdlKSB7XG4vLyBcdFx0XHRcdC8vIGxlZnQ6IC0kc21sO1xuLy8gXHRcdFx0fVxuXG4vLyBcdFx0XHRAaW5jbHVkZSB1cHBlcnNwYWNlO1xuLy8gXHRcdH1cbi8vIFx0fVxuIiwiLy8gLmJsb2NrX3Rlc3RpbW9uaWFsIHtcbi8vIFx0cGFkZGluZy10b3A6ICRoMztcbi8vIH0iLCJcbi8vIFN0eWxlcyB0byBiZSByZW1vdmVkIGdvIGhlcmUuXG5cbi8vIC5ibG9jayB7XG4vLyBcdG1hcmdpbi1ib3R0b206ICRzaXplLXA7XG5cbi8vIFx0LmNvbnRhaW4ge1xuLy8gXHRcdGJvcmRlcjogJGJvcmRlci1hY2NlbnQ7XG4vLyBcdH1cbi8vIH1cbiJdLCJtYXBwaW5ncyI6IkFFQUEsNERBQTREO0FBRTVEOzs7O0dBSUc7QUFFSCxBQUFBLElBQUksQ0FBQztFQUNILFdBQVcsRUFBRSxVQUFXO0VBQUUsT0FBTztFQUNqQyxvQkFBb0IsRUFBRSxJQUFLO0VBQUUsT0FBTztFQUNwQyx3QkFBd0IsRUFBRSxJQUFLO0VBQUUsT0FBTyxFQUN6Qzs7QUFFRDs7R0FFRztBQUVILEFBQUEsSUFBSSxDQUFDO0VBQ0gsTUFBTSxFQUFFLENBQUUsR0FDWDs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7R0FJRztBQUVILEFBQUEsT0FBTztBQUNQLEFBQUEsS0FBSztBQUNMLEFBQUEsT0FBTztBQUNQLEFBQUEsVUFBVTtBQUNWLEFBQUEsTUFBTTtBQUNOLEFBQUEsTUFB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 */
